///////////////////////////////////////////////////////////////////////////////////
// jquery.meio.mask 설정
///////////////////////////////////////////////////////////////////////////////////
$.mask.options.attr = "masktype";
$.mask.options.autoTab = false;		// 시각장애인 접근성때문에 자동탭이동 설정 안함
$.mask.masks.time = {mask: "29:69"};
$.mask.masks.date = {mask: "9999.19.39"};
$.mask.masks.dateYmd = {mask: "9999.19.39"};
$.mask.masks.dateYm = {mask: "9999.19"};
$.mask.masks.ctzno = {mask: "999999-9999999"};
$.mask.masks.postno = {mask: "999-999"};
$.mask.masks.bizno = {mask: "999-99-99999"};
$.mask.masks.number = {mask: "999,999,999,999,999", type : "reverse" };
$.mask.masks.integer = {mask: "999,999,999,999,999", type : "reverse", defaultValue : "+" };
$.mask.masks.money = {mask: "999,999,999,999,999", type : "reverse", defaultValue : "+" };

/**
 * meiomask에서 - 값 입력 후 값을 지울때도 계속해서 - 값이 남아있는데
 * 모든 값을 지울경우 자동으로 - 값도 지워지도록 onKeyUp 이벤트 재정의함.
 * (원래는 -, + 키 누르면되지만 사용자편의를 위해 모든 값 지울경우 - 값조차 지워지도록 함)
 */
$.mask._onKeyUp = function(e, o){
	//9=TAB_KEY 16=SHIFT_KEY
	//this is a little bug, when you go to an input with tab key
	//it would remove the range selected by default, and that's not a desired behavior
	if(o.nKey==9 || o.nKey==16) return true;

	if(o.data.type=='repeat'){
		this.__autoTab(o);
		return true;
	}
	// 코드 추가 부분 : 모든 값 지울경우 - 값도 모두 지우도록 설정
	if (o.value == "" && o.data.signal == "-") {
		o.data.signal = "";
	}
	return this._onPaste(e, o);
};

/*$.extend(jQuery.validator.messages, {
	required: " 입력해주세요.",
	remote: "수정 바랍니다.",
	email: "이메일 주소를 올바로 입력해주세요.",
	url: "URL을 올바르게 입력해주세요.",
	date: "올바른 날짜를 입력해주세요.",
	dateISO: "ISO 형식에 맞는 날짜로 입력하세요.",
	number: "숫자만 입력해주세요.",
	digits: "숫자(digits)만 입력하세요.",
	creditcard: "올바른 신용카드 번호를 입력하세요.",
	equalTo: "값이 서로 다릅니다.",
	accept: "승낙해 주세요.",
	maxlength: $.validator.format("{0}글자 이상은 입력할 수 없습니다."),
	minlength: $.validator.format("적어도 {0}글자는 입력해야 합니다."),
	rangelength: $.validator.format("{0}글자 이상 {1}글자 이하로 입력해주세요."),
	range: $.validator.format("{0}에서 {1} 사이의 값을 입력해주세요."),
	max: $.validator.format("{0} 이하로 입력해주세요."),
	min: $.validator.format("{0} 이상으로 입력해주세요.") ,
	
	// hris용 추가.
	engnum: "숫자와 영문만 입력해주세요.",
	money: "숫자만 입력해주세요.",
	ctzno: "올바른 주민등록번호 아닙니다.",
	bizno: "올바른 사업자등록번호가 아닙니다.",
	time : "올바른 시간을 입력해주세요"
}); 
*/

/*
jQuery.validator.addMethod("date", function(value, element) {
	return this.optional(element) || value.isDate();
});
jQuery.validator.addMethod("engnum", function(value, element) {
	return this.optional(element) || value.isEngNum();
});
jQuery.validator.addMethod("money", function(value, element) {
	return this.optional(element) || value.isMoney();
});
jQuery.validator.addMethod("ctzno", function(value, element) {
	return this.optional(element) || value.isCtzNo();
});
jQuery.validator.addMethod("bizno", function(value, element) {
	return this.optional(element) || value.isBizNo();
});
jQuery.validator.addMethod("time", function(value, element) {
	return this.optional(element) || value.isTime();
});
jQuery.validator.addMethod("msg", function(value, element) {return true;}, "");*/

/**
 * 폼 검증시 입력에러가 있을 경우 alert 창으로 띄우도록 설정 변경
 */
/*jQuery.validator.setDefaults({
	onkeyup:false,
	onclick:false,
	onfocusout:false,
	ignore:'',
	ignoreTitle:true,
	success: "valid",
	showErrors:function(errorMap, errorList){
		if(!$.isEmptyObject(errorList)){
			var msg = "";
			var element = $(errorList[0].element);
			var required_result = $.validator.methods["required"].call( this, element[0].value.replace(/\r/g, ""), element[0], true );
			var msg_end = errorList[0].message;
			var title = element.attr("title");
			
			if (typeof(title) == "undefined") title = "";

			// 필수입력값을 입력 안했을 경우에는 msg 속성의 값을 가져와서 경고창을 표시한다.
			if (!required_result) {
				msg = $(errorList[0].element).rules()["msg"] || "";
				if (msg == "") {
					if (title != "") {
						msg = errorList[0].message;
						msg_end = jQuery.validator.messages.required;
					}
				} else {
					msg_end = jQuery.validator.messages.required;
				}
				
				if (msg != "") {
					msg = msg.toJosa("을","를");
				} else {
					msg = "항목에 값을";
				}
			}

			if (element[0].tagName == "SELECT" ||
				(element.attr("type") && element.attr("type").toUpperCase() == "CHECKBOX") ||
				(element.attr("type") && element.attr("type").toUpperCase() == "RADIO")) {
				msg_end = " 선택해주세요.";
			}

			alert(msg + msg_end);
			$(errorList[0].element).focus();
		}
	}
});
*/
/**
 * 동일이름의 input element가 있을 경우 하나의 element에 대해서만 오류체크하는데
 * 모두 체크 가능하도록 함수 재정의 함
 */
/*$.validator.prototype.checkForm = function() {
	this.prepareForm();
	for ( var i = 0, elements = (this.currentElements = this.elements()); elements[i]; i++ ) {
		if (this.findByName( elements[i].name ).length != undefined && this.findByName( elements[i].name ).length > 1) {
			for (var cnt = 0; cnt < this.findByName( elements[i].name ).length; cnt++) {
				this.check( this.findByName( elements[i].name )[cnt] );
			}
		} else {
			this.check( elements[i] );
		}
	}
	return this.valid();
};*/

